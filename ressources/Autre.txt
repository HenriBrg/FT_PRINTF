~~~ Taille minimum du champ ~~~

% [flags][width][.precision][size]type
          ^^^^^

Par défaut la taille du champ est la plus petite requise, mais
on peut la faire varier avec :

int number    =  5;
char *pointer = "little";
printf("Here is a number-%4d-and a-%10s-word.\n", number, pointer);

Output : "Here is a number-   5-and a-    little-word."

Il faut donc gérer un éventuel nombre avant qui
définira le nombre d'espace à afficher

--------------------------------------------------------------------------------

~~~ Précision ~~~

% [flags][width][.precision][size]type
                 ^^^^^^^^^^

Par défaut elle est à 1

Elle décide du nombre maximum de caractère à afficher et commence par '.'
Exemple : printf("%.9s\n", "ft_printf and ft_dprintf") ==> Affichera "ft_printf"

--------------------------------------------------------------------------------

~~~ Autres Flags ~~~ A voir + tard

% [flags][width][.precision][size]type
                             ^^^^

Modificateurs de longueurs :
(voir http://manpagesfr.free.fr/man/man3/printf.3.html
et https://riptutorial.com/fr/c/example/29297/modificateurs-de-longueur)

hh ===> Convertir l'input en char / unsigned char
h  ===> Convertir l'input en short int / unsigned short int
l  ===> Convertir l'input en long int / unsigned long int
ll ===> Convertir l'input en long long int / unsigned long long int
j  ===> Convertir l'input en intmax_t ou uintmax_t.
z  ===> Convertir l'input en size_t ou ssize_t
